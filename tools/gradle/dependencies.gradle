def build = [
        compileSdkVersion: 28,
        minSdkVersion    : 21,
        targetSdkVersion : 28,
        versionCode      : 1,
        versionName      : "1.0"
]

def versions = [
        instabug   : '8.6.3',
        support    : '28.0.0',
        junit      : '4.12',
        testrunner : '1.0.2',
        espresso   : '3.0.2',
        dagger     : '2.11',
        butterKnife: '9.0.0-rc2',
        glide      : '4.3.0',
        timber     : '4.5.1',
        retrofit   : '2.2.0',
        leakCanary : '1.5.4',
        room       : '2.2.0-rc01',
        powermock  : '1.6.6',
        mockito    : '1.9.5',
        robolectric: '3.8',
]

def support = [
        annotations     : "com.android.support:support-annotations:${versions.support}",
        design          : "com.android.support:design:${versions.support}",
        recyclerview    : "com.android.support:recyclerview-v7:${versions.support}",
        constraintLayout: 'com.android.support.constraint:constraint-layout:1.0.2',
]

def rx = [
        binding        : "com.jakewharton.rxbinding2:rxbinding:2.0.0",
        java           : "io.reactivex.rxjava2:rxjava:2.0.5",
        android        : "io.reactivex.rxjava2:rxandroid:2.0.1",
        relay          : "com.jakewharton.rxrelay2:rxrelay:2.0.0",
        retrofitAdapter: "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0",
]

def network = [
        retrofit             : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
        retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
]

def dependencyInjection = [
        dagger               : "com.google.dagger:dagger:${versions.dagger}",
        daggerCompiler       : "com.google.dagger:dagger-compiler:${versions.dagger}",
        daggerAndroid        : "com.google.dagger:dagger-android:${versions.dagger}",
        daggerSupportAndroid : "com.google.dagger:dagger-android-support:${versions.dagger}",
        daggerAndroidCompiler: "com.google.dagger:dagger-android-processor:${versions.dagger}",
]


def viewBinding = [
        butterknife        : "com.jakewharton:butterknife:${versions.butterKnife}",
        butterknifeCompiler: "com.jakewharton:butterknife-compiler:${versions.butterKnife}"
]

def image = [
        glide        : "com.github.bumptech.glide:glide:${versions.glide}",
        glideCompiler: "com.github.bumptech.glide:compiler:${versions.glide}"
]

def test = [
        junit                 : "junit:junit:${versions.junit}",
        runner                : "com.android.support.test:runner:${versions.testrunner}",
        espresso              : "com.android.support.test.espresso:espresso-core:${versions.espresso}",
        robolectric           : "org.robolectric:robolectric:${versions.robolectric}",
        mockito               : "org.mockito:mockito-core:${versions.mockito}",
        powermock_mockito     : "org.powermock:powermock-api-mockito:${versions.powermock}",
        powermock_easymock    : "org.powermock:powermock-api-easymock:${versions.powermock}",
        powermock_reflect     : "org.powermock:powermock-reflect:${versions.powermock}",
        powermock_junit4      : "org.powermock:powermock-module-junit4:${versions.powermock}",
        powermock_junit4_rule : "org.powermock:powermock-module-junit4-rule:${versions.powermock}",
        powermock_classloading: "org.powermock:powermock-classloading-xstream:${versions.powermock}",
]

def architecturecomponents = [
        lifecycles   : "android.arch.lifecycle:common-java8:1.1.0",
        room         : "androidx.room:room-runtime:${versions.room}",
        room_compiler: "androidx.room:room-compiler:${versions.room}",
]

def log = [
        timber           : "com.jakewharton.timber:timber:${versions.timber}",
        leakCanaryDebug  : "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}",
        leakCanaryRelease: "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}",
]

ext.deps = [
        versions              : versions,
        build                 : build,
        support               : support,
        log                   : log,
        test                  : test,
        dependencyInjection   : dependencyInjection,
        viewBinding           : viewBinding,
        image                 : image,
        rx                    : rx,
        network               : network,
        architecturecomponents: architecturecomponents,
]